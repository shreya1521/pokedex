{"version":3,"sources":["components/Pagination.js","components/Pokemoncard.js","components/Searchbar.js","components/Mainpage.js"],"names":["Pagination","postsPerPage","totalPosts","paginate","currentpage","pagenumbers","i","Math","ceil","push","className","map","number","onClick","href","Pokemoncard","imgname","item","src","name","to","toUpperCase","Searchbar","onSearch","useState","search","setSearch","type","style","width","value","onChange","e","target","Mainpage","match","useEffect","fetchItems","items","setItems","setCurrentpage","a","fetch","data","json","results","indexOfLastPost","indexOfFirstPost","currentposts","slice","cdata","useMemo","comp","filter","toLowerCase","includes","length","pagenumber"],"mappings":"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","file":"static/js/6.d3c75f2f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './pagestyle.css';\r\n\r\nconst Pagination = ({postsPerPage, totalPosts, paginate, currentpage}) => {\r\n    const pagenumbers=[];\r\n\r\n    for(let i=1; i<=Math.ceil(totalPosts/postsPerPage);i++){\r\n        pagenumbers.push(i);\r\n    }\r\n    return (\r\n        <nav className=\"pnav\">\r\n            <ul className=\"pagination\">\r\n                {pagenumbers.map(number =>(\r\n                    <li key={number} className={currentpage==number?\"active\":null} onClick={()=>paginate(number)}href =\"!#\">\r\n                            {number}\r\n                       \r\n                    </li>\r\n                ))}\r\n\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Searchbar.css';\r\n\r\n// function Pokemoncard({match , item}) {\r\n \r\n  \r\n//   useEffect(() => {\r\n//     fetchIte();\r\n    \r\n//  },[]);\r\n\r\n//   const [ite,setIte] = useState({\r\n  \r\n//     name: '',\r\n//     held_items: [],\r\n//     id: ''\r\n// });\r\n\r\n// const fetchIte = async() => {\r\n//   const fetchIt = await fetch(`https://pokeapi.co/api/v2/pokemon/${match.params.name}`);\r\n\r\n//   const ite = await fetchIt.json();\r\n//   setIte(ite);\r\n//   console.log(ite);\r\n//   }\r\n\r\n// return (\r\n  \r\n//   <div className=\"card\">\r\n//     <div className=\"cardimg\">\r\n//    <img src = {`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/${item.id}.svg`} className=\"img\"/>\r\n//    </div>\r\n//     <div >\r\n//       <h3 className = \"h3\">\r\n//     <Link to= {`/pokemondata/${item.name}`} className=\"itemname\">\r\n//                   {item.name.toUpperCase()}\r\n//     </Link>\r\n//     </h3>\r\n//     </div>\r\n//   </div>\r\n \r\n// )}\r\n// export default Pokemoncard\r\n\r\n\r\n\r\n\r\n// function Pokemoncard({item}) {\r\n \r\n\r\n//   const [img] = useState({\r\n  \r\n//     name: {\r\n//       intro: 'bulbasaur',\r\n//       id: 1\r\n//     },\r\n//     name: {\r\n//       intro: 'ivysaur',\r\n//       id: 2\r\n//     },\r\n//     name: {\r\n//       intro: 'venusaur',\r\n//       id: 3\r\n//     },\r\n//     name: {\r\n//       intro: 'charmander',\r\n//       id: 4\r\n//     },\r\n//     name: {\r\n//       intro: 'charmeleon',\r\n//       id: 5\r\n//     },\r\n//     name: {\r\n//       intro: 'charizard',\r\n//       id: 6\r\n//     },\r\n//     name: {\r\n//       intro: 'squirtle',\r\n//       id: 7\r\n//     },\r\n//     name: {\r\n//       intro: 'wartortle',\r\n//       id: 8\r\n//     },\r\n//     name: {\r\n//       intro: 'blastoise',\r\n//       id: 9\r\n//     },\r\n//     name: {\r\n//       intro: 'caterpie',\r\n//       id: 10\r\n//     },\r\n//     name: {\r\n//       intro: 'metapod',\r\n//       id: 11\r\n//     },\r\n//     name: {\r\n//       intro: 'butterfree',\r\n//       id: 12\r\n//     },\r\n//     name: {\r\n//       intro: 'weedle',\r\n//       id: 13\r\n//     },\r\n//     name: {\r\n//       intro: 'kakuna',\r\n//       id: 14\r\n//     },\r\n//     name: {\r\n//       intro: 'beedrill',\r\n//       id: 15\r\n//     },\r\n//     name: {\r\n//       intro: 'pidgey',\r\n//       id: 16\r\n//     },\r\n//     name: {\r\n//       intro: 'pidgeotto',\r\n//       id: 17\r\n//     },\r\n//     name: {\r\n//       intro: 'pidgeot',\r\n//       id: 18\r\n//     },\r\n//     name: {\r\n//       intro: 'rattata',\r\n//       id: 19\r\n//     },\r\n//     name: {\r\n//       intro: 'raticate',\r\n//       id: 20\r\n//     }\r\n\r\n\r\n// });\r\n\r\n// const func = () => {\r\n//   if (img.name.intro == item.name)\r\n//   return img.name.id;\r\n   \r\n// }\r\n\r\n\r\n// return (\r\n  \r\n//   <div className=\"card\">\r\n//     <div className=\"cardimg\">\r\n//    <img src = {'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/'+func()+'.svg'} className=\"img\"/>\r\n//    </div>\r\n//     <div >\r\n//       <h3 className = \"h3\">\r\n//     <Link to= {`/pokemondata/${item.name}`} className=\"itemname\">\r\n//                   {item.name.toUpperCase()}\r\n//     </Link>\r\n//     </h3>\r\n//     </div>\r\n//   </div>\r\n \r\n// )}\r\n// export default Pokemoncard\r\n\r\n\r\n\r\n\r\n\r\nfunction Pokemoncard({item}) {\r\n \r\n\r\n  const func = (imgname) => {\r\n  \r\n    if (imgname=='bulbasaur'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/1.svg';\r\n     \r\n    }\r\n     else if (imgname=='ivysaur'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/2.svg';\r\n     \r\n    }\r\n    else if (imgname=='venusaur'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/3.svg';\r\n     \r\n    }\r\n    else if (imgname=='charmander'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/4.svg';\r\n     \r\n    }\r\n    else if (imgname=='charmeleon'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/5.svg';\r\n     \r\n    }\r\n    else if (imgname=='charizard'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/6.svg';\r\n     \r\n    }\r\n    else if (imgname=='squirtle'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/7.svg';\r\n     \r\n    }\r\n    else if (imgname=='wartortle'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/8.svg';\r\n     \r\n    }\r\n    else if (imgname=='blastoise'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/9.svg';\r\n     \r\n    }\r\n    else if (imgname=='caterpie'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/10.svg';\r\n     \r\n    }\r\n    else if (imgname=='metapod'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/11.svg';\r\n     \r\n    }\r\n    else if (imgname=='butterfree'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/12.svg';\r\n     \r\n    }\r\n    else if (imgname=='weedle'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/13.svg';\r\n     \r\n    }\r\n    else if (imgname=='kakuna'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/14.svg';\r\n     \r\n    }\r\n    else if (imgname=='beedrill'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/15.svg';\r\n     \r\n    }\r\n    else if (imgname=='pidgey'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/16.svg';\r\n     \r\n    }\r\n    else if (imgname=='pidgeotto'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/17.svg';\r\n     \r\n    }\r\n    else if (imgname=='pidgeot'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/18.svg';\r\n     \r\n    }\r\n    else if (imgname=='rattata'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/19.svg';\r\n     \r\n    }\r\n    else if (imgname=='raticate'){\r\n      return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/20.svg';\r\n     \r\n    }\r\n    else \r\n    return 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/dream-world/10.svg';\r\n     \r\n  }\r\n\r\n\r\nreturn (\r\n  \r\n  <div className=\"card\">\r\n    <div className=\"cardimg\">\r\n   <img src = {func(item.name)} className=\"img\"/>\r\n   </div>\r\n    <div >\r\n      <h3 className = \"h3\">\r\n    <Link to= {`/pokemondata/${item.name}`} className=\"itemname\">\r\n                  {item.name.toUpperCase()}\r\n    </Link>\r\n    </h3>\r\n    </div>\r\n  </div>\r\n \r\n  )}\r\nexport default Pokemoncard\r\n","import React,{useState} from 'react';\r\nimport { FaSearch } from \"react-icons/fa\";\r\nimport './Searchbar.css';\r\n\r\nfunction Searchbar({onSearch}) {\r\n    const [search, setSearch] = useState(\"\");\r\n    \r\n    const onInputChange = (value) => {\r\n        setSearch(value);\r\n        onSearch(value);\r\n      }\r\n    return (\r\n      <div>\r\n      <div className=\"searchform\">\r\n        <FaSearch className=\"svg\"/>\r\n        <input type=\"text\" className=\"searchinput\" style={{width: \"240px\"}}  value={search}\r\n            onChange={(e)=> onInputChange(e.target.value)}/>\r\n       </div>\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default Searchbar\r\n","import React,{useState, useEffect, useMemo} from 'react';\r\nimport Pagination from './Pagination';\r\nimport './Searchbar.css';\r\nimport Pokemoncard from './Pokemoncard';\r\nimport Searchbar from './Searchbar';\r\n\r\n\r\nfunction Mainpage({match}) {\r\n    useEffect(() => {\r\n        fetchItems();\r\n      \r\n    },[]);\r\n    \r\n    const [items,setItems] = useState([]);\r\n    const [currentpage, setCurrentpage] = useState(1);\r\n    const [postsPerPage] = useState(5);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    \r\n\r\n  \r\n    const fetchItems = async() => {\r\n        const data = await fetch('https://pokeapi.co/api/v2/pokemon/');\r\n\r\n        const items = await data.json();\r\n      \r\n        setItems(items.results);\r\n        }\r\n\r\n      \r\n\r\n        const indexOfLastPost = currentpage*postsPerPage ;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentposts = items.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = (pagenumber) => setCurrentpage(pagenumber);\r\n\r\n    const cdata =useMemo(() => {\r\n        let comp = items;\r\n        if(search){\r\n            comp=comp.filter(\r\n                item=>item.name.toLowerCase().includes(search.toLowerCase())\r\n            )\r\n        }\r\n       \r\n        return comp.slice(indexOfFirstPost, indexOfLastPost);\r\n    },[items, currentposts, search])\r\n    \r\n   \r\n    return (\r\n      <div className=\"root\">\r\n          \r\n          <Searchbar onSearch={(value)=>{\r\n              setSearch(value);\r\n              setCurrentpage(1);\r\n          }}/>\r\n            {cdata.map(item => (\r\n                \r\n                <Pokemoncard key={item.name} match= {match} item={item} />\r\n                  \r\n            )) }\r\n    \r\n            <Pagination postsPerPage={postsPerPage} totalPosts={items.length} paginate={paginate} currentpage={currentpage}/>\r\n       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Mainpage\r\n"],"sourceRoot":""}